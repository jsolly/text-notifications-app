---
interface Language {
	code: string;
	name: string;
}

interface Unit {
	code: string;
	name: string;
}

// Define available languages (English only for now)
const languages: Language[] = [{ code: "en", name: "English" }];

// Define available units
const units: Unit[] = [
	{ code: "metric", name: "Metric (°C, meters, liters)" },
	{ code: "imperial", name: "Imperial (°F, miles, gallons)" },
];
---

<section class="user-preferences">
    <h2 class="text-lg font-semibold text-slate-800 mb-6">Preferences</h2>
    <div class="flex flex-col gap-6">
        <!-- Language Selection -->
        <div>
            <label for="language" class="block text-sm font-medium text-slate-700 mb-1">
                Language
            </label>
            <select 
                id="language" 
                name="language" 
                class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                required
            >
                {languages.map(lang => (
                    <option value={lang.code}>
                        {lang.name}
                    </option>
                ))}
            </select>
        </div>

        <!-- Unit Selection -->
        <div>
            <label for="unit" class="block text-sm font-medium text-slate-700 mb-1">
                Measurement Units
            </label>
            <select 
                id="unit" 
                name="unit" 
                class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                required
            >
                {units.map(unit => (
                    <option value={unit.code}>
                        {unit.name}
                    </option>
                ))}
            </select>
        </div>
    </div>
</section>

<script>
    // Set initial preferences based on browser settings
    function setInitialPreferences() {
        const languageSelect = document.getElementById('language') as HTMLSelectElement;
        const unitSelect = document.getElementById('unit') as HTMLSelectElement;

        if (languageSelect && unitSelect) {
            // Get browser's language and region
            const [lang, region] = navigator.language.split('-');
            
            // Set language if it's available in our options
            if (lang && ['en'].includes(lang.toLowerCase())) {
                languageSelect.value = lang.toLowerCase();
            }
            
            // Set unit based on region
            if (region && ['US', 'MM', 'LR'].includes(region.toUpperCase())) {
                unitSelect.value = 'imperial';
            }
            else {
                unitSelect.value = 'metric';
            }
        }
    }

    // Run on page load
    document.addEventListener('DOMContentLoaded', setInitialPreferences);
</script> 
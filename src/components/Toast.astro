---
interface Props {
	id: string;
	autoHide?: boolean;
	autoHideDuration?: number;
	zIndex?: number;
}

const {
	id,
	autoHide = true,
	autoHideDuration = 5000,
	zIndex = 50,
} = Astro.props;
---

<div 
  id={id}
  class={`fixed top-0 left-1/2 -translate-x-1/2 z-${zIndex} max-w-md transform transition-all duration-300 ease-in-out opacity-0 -translate-y-full`}
>
  <!-- This div will be replaced by the HTMX response -->
</div>

<script is:inline define:vars={{ id, autoHide, autoHideDuration }}>
  // Initialize toast immediately
  (function() {
    const toastElement = document.getElementById(id);
    if (!toastElement) {
      console.error(`Toast element with id "${id}" not found`);
      return;
    }
    
    let hideTimeout;
    
    // Function to show the toast with the HTML content from the server
    function showToast() {
      // Show the toast
      toastElement.classList.remove('-translate-y-full', 'opacity-0');
      toastElement.classList.add('translate-y-0', 'opacity-100');
      
      // Clear any existing timeout
      if (hideTimeout) {
        clearTimeout(hideTimeout);
      }
      
      // Auto-hide after duration if enabled
      if (autoHide) {
        hideTimeout = setTimeout(() => {
          hideToast();
        }, autoHideDuration);
      }
    }
    
    // Function to hide the toast
    function hideToast() {
      toastElement.classList.remove('translate-y-0', 'opacity-100');
      toastElement.classList.add('-translate-y-full', 'opacity-0');
    }
    
    // Function to show a custom toast message (for validation errors)
    function showCustomToast(message, type = 'success') {
      console.log(`Showing custom toast: "${message}" (${type})`);
      
      // Create the appropriate toast HTML based on type
      if (type === 'success') {
        toastElement.innerHTML = `
          <div class="flex items-center p-4 rounded-lg shadow-lg border bg-green-50 border-green-200 text-green-700 mt-4">
            <svg class="h-5 w-5 mr-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
            </svg>
            <div class="flex-1">
              <p class="text-sm toast-message">${message}</p>
            </div>
            <button class="ml-4 text-gray-400 hover:text-gray-600 focus:outline-none toast-close-btn" aria-label="Close">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
              </svg>
            </button>
          </div>
        `;
      } else {
        toastElement.innerHTML = `
          <div class="flex items-center p-4 rounded-lg shadow-lg border bg-red-50 border-red-200 text-red-700 mt-4">
            <svg class="h-5 w-5 mr-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
            </svg>
            <div class="flex-1">
              <p class="text-sm toast-message">${message}</p>
            </div>
            <button class="ml-4 text-gray-400 hover:text-gray-600 focus:outline-none toast-close-btn" aria-label="Close">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
              </svg>
            </button>
          </div>
        `;
      }
      
      // Add event listener to close button
      const closeButton = toastElement.querySelector('.toast-close-btn');
      if (closeButton) {
        closeButton.addEventListener('click', hideToast);
      }
      
      // Show the toast
      showToast();
    }
    
    // Listen for HTMX events to show the toast when content is loaded
    document.addEventListener('htmx:afterSwap', function(event) {
      if (event.detail.target.id === id) {
        // Add event listener to close button
        const closeButton = toastElement.querySelector('.toast-close-btn');
        if (closeButton) {
          closeButton.addEventListener('click', hideToast);
        }
        
        // Show the toast
        showToast();
      }
    });
    
    // Listen for custom toast events (for validation messages)
    window.addEventListener('toast-show', (event) => {
      const { message, type } = event.detail || {};
      if (message) {
        showCustomToast(message, type);
      }
    });
    
    // Expose the functions globally for other components to use
    window.toastFunctions = {
      showToast,
      hideToast,
      showCustomToast
    };
  })();
</script> 
---
import ContactInformation from "./contact-info/UserContactInfo.astro";
import UserPreferences from "./user-preferences/UserPreferences.astro";
import InstantAlerts from "./notifications/instant/InstantAlerts.astro";
import DailyNotifications from "./notifications/daily/DailyNotifications.astro";

const SIGNUP_API_URL = import.meta.env.PUBLIC_SIGNUP_API_URL;
---

<div class="bg-white rounded-xl shadow-lg p-8 max-w-md w-full">
  <h1 class="text-3xl font-bold text-slate-800 mb-3">Text Notifications App</h1>
  <p class="text-slate-600 mb-8">Choose events you'd like to receive text notifications about.</p>
  
  <form 
    hx-post={SIGNUP_API_URL}
    hx-swap="outerHTML"
    hx-headers='{"cf-turnstile-response": ""}'
    class="space-y-8"
  >
    <div class="space-y-8">
      <ContactInformation />
      <UserPreferences />

      <section>
        <h2 class="text-lg font-semibold text-slate-800 mb-6">Notifications</h2>
        <InstantAlerts />
        <DailyNotifications />
      </section>
    </div>

    <div class="space-y-4">
      <div 
        class="cf-turnstile" 
        data-sitekey="0x4AAAAAAA-VShq_quZ6_LKy"
        data-callback="onTurnstileCallback"
        data-theme="light"
      ></div>

      <button type="submit" 
        id="submit-button"
        class="w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors font-medium opacity-50 cursor-not-allowed">
        Sign Up for Notifications
      </button>

      <p class="text-xs text-slate-500 text-center">
        By signing up, you agree to receive text messages about your selected events. 
        Message and data rates may apply.
      </p>
    </div>
  </form>
</div>

<!-- Add HTMX to the page -->
<script src="https://unpkg.com/htmx.org@1.9.10"></script>

<!-- Add Turnstile -->
<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" defer></script>

<!-- Add form validation -->
<script>
  interface ValidationEvent extends CustomEvent {
    detail: { isValid: boolean };
  }

  // Declare Turnstile callback type on window
  declare global {
    interface Window {
      onTurnstileCallback: (token: string) => void;
    }
  }

  let isPhoneValid = false;
  let isCityValid = false;
  let isTurnstileValid = false;
  const form = document.querySelector('form');
  const submitButton = document.getElementById('submit-button');

  if (!form || !submitButton) {
    console.error('Required form elements not found');
    throw new Error('Required form elements not found');
  }

  // Listen for phone validation changes
  document.addEventListener('phone-validation-change', ((event: ValidationEvent) => {
    isPhoneValid = event.detail.isValid;
    updateSubmitButton();
  }) as EventListener);

  // Listen for city validation changes
  document.addEventListener('city-validation-change', ((event: ValidationEvent) => {
    isCityValid = event.detail.isValid;
    updateSubmitButton();
  }) as EventListener);

  // Turnstile callback
  const onTurnstileCallback = (token: string) => {
    isTurnstileValid = true;
    // Update the hx-headers attribute with the token
    form.setAttribute('hx-headers', JSON.stringify({
      'cf-turnstile-response': token
    }));
    updateSubmitButton();
  };
  window.onTurnstileCallback = onTurnstileCallback;

  function isFormValid() {
    return isPhoneValid && isCityValid && isTurnstileValid;
  }

  function updateSubmitButton() {
    if (!submitButton) return;

    if (!isFormValid()) {
      submitButton.classList.add('opacity-50', 'cursor-not-allowed');
      submitButton.classList.remove('hover:bg-blue-700');
    } else {
      submitButton.classList.remove('opacity-50', 'cursor-not-allowed');
      submitButton.classList.add('hover:bg-blue-700');
    }
  }

  // Prevent form submission if validation fails
  form.addEventListener('htmx:beforeRequest', (event) => {
    if (!isFormValid()) {
      event.preventDefault();
      const missingFields = [];
      if (!isPhoneValid) missingFields.push('valid phone number');
      if (!isCityValid) missingFields.push('city');
      if (!isTurnstileValid) missingFields.push('Turnstile verification');
      alert(`Please provide a ${missingFields.join(' and ')} before submitting.`);
    }
  });

  // Initial button state
  updateSubmitButton();
</script>
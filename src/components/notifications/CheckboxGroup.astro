---
interface CheckboxItem {
	id: string;
	label: string;
	description: string;
}

export interface Props {
	title: string;
	parentCheckbox: CheckboxItem;
	childCheckboxItems: CheckboxItem[];
}

const { title, parentCheckbox, childCheckboxItems } = Astro.props;

// Create a JavaScript object with child IDs as keys for Alpine.js initialization
const childStateEntries = childCheckboxItems
	.map(
		(item) =>
			`{ id: "${item.id}", label: "${item.label}", description: "${item.description}", checked: false }`,
	)
	.join(", ");
---

<div class="mb-6" 
  x-data={`{ 
    parent: { 
      id: "${parentCheckbox.id}", 
      label: "${parentCheckbox.label}", 
      description: "${parentCheckbox.description}" 
    },
    children: [${childStateEntries}]
  }`}
>
  <h2 class="text-base font-medium text-slate-800 mb-3">{title}</h2>
  <div class="space-y-2 pl-1">
    <div>
      <!-- Parent checkbox -->
      <div class="p-2 rounded-lg hover:bg-slate-50 transition-colors">
        <div class="flex items-start space-x-3">
          <input 
            type="checkbox" 
            :id="parent.id" 
            name="notifications" 
            :value="parent.id"
            :aria-describedby="`${parent.id}-description`"
            class="h-4 w-4 min-h-[16px] min-w-[16px] mt-1 text-blue-600 rounded border-slate-300 focus:ring-blue-500"
            :checked="children.every(c => c.checked)"
            @change="children.forEach(c => c.checked = $event.target.checked)"
            x-effect="$el.indeterminate = children.some(c => c.checked) && !children.every(c => c.checked)"
          >
          <div>
            <label :for="parent.id" class="text-slate-700 cursor-pointer text-sm font-medium" x-text="parent.label"></label>
            <p :id="`${parent.id}-description`" class="text-xs text-slate-500 mt-0.5" x-text="parent.description"></p>
          </div>
        </div>
      </div>

      <!-- Child checkboxes -->
      <div class="ml-8 space-y-2 mt-2">
        <template x-for="child in children" :key="child.id">
          <div class="p-2 rounded-lg hover:bg-slate-50 transition-colors">
            <div class="flex items-start space-x-3">
              <input 
                type="checkbox" 
                :id="child.id"
                name="notifications" 
                :value="child.id"
                :aria-describedby="`${child.id}-description`"
                class="h-4 w-4 min-h-[16px] min-w-[16px] mt-1 text-blue-600 rounded border-slate-300 focus:ring-blue-500"
                x-model="child.checked"
              >
              <div>
                <label :for="child.id" class="text-slate-700 cursor-pointer text-sm font-medium" x-text="child.label"></label>
                <p :id="`${child.id}-description`" class="text-xs text-slate-500 mt-0.5" x-text="child.description"></p>
              </div>
            </div>
          </div>
        </template>
      </div>
    </div>
  </div>
</div> 
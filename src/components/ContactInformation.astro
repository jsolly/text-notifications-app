---
import { neon } from "@neondatabase/serverless";
const sql = neon(import.meta.env.DATABASE_URL);

// Query all cities with their states and countries at build time
const cities = await sql`
	SELECT 
		c.city_id,
		c.city_name,
		c.state_code,
		c.state_name,
		c.country_code,
		c.country_name
	FROM Cities c
	ORDER BY c.city_name
`;

// Transform into a searchable format with full labels
const cityOptions = cities.map((city) => ({
	value: city.city_id,
	searchText: [
		city.city_name,
		city.state_name || city.state_code,
		city.country_name,
	]
		.filter(Boolean)
		.join(" ")
		.toLowerCase(),
	label: [city.city_name, city.state_name || city.state_code, city.country_name]
		.filter(Boolean)
		.join(", "),
}));
---

<script define:vars={{ cityOptions }}>
	document.addEventListener('alpine:init', () => {
		Alpine.data('contactInfo', () => ({
			searchQuery: '',
			selectedCity: null,
			showDropdown: false,
			
			get filteredCities() {
				const query = this.searchQuery.toLowerCase().replace(/[,\s]+/g, " ").trim();
				return query.length < 2 
					? [] 
					: cityOptions
						.filter(city => city.searchText.includes(query))
						.slice(0, 10);
			},

			selectCity(city) {
				this.selectedCity = city.value;
				this.searchQuery = city.label;
				this.showDropdown = false;
			},

			handleInput() {
				// If user is typing something different than the selected city label,
				// reset the selection and show dropdown
				if (this.searchQuery !== cityOptions.find(c => c.value === this.selectedCity)?.label) {
					this.selectedCity = null;
					this.showDropdown = true;
				}
			}
		}));
	});
</script>

<section x-data="contactInfo">
	<h2 class="text-lg font-semibold text-slate-800 mb-4">Contact Information</h2>
	<div class="space-y-4">
		<div>
			<label for="phone" class="block text-sm font-medium text-slate-700 mb-1">Phone Number</label>
			<input 
				type="tel" 
				id="phone" 
				name="phone"
				class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
				placeholder="(555) 555-5555"
				pattern="\(\d{3}\)\s\d{3}-\d{4}"
				required
			>
		</div>

		<div class="relative">
			<label for="city-search" class="block text-sm font-medium text-slate-700 mb-1">City</label>
			<input
				type="text"
				id="city-search"
				x-model="searchQuery"
				@input="handleInput"
				placeholder="Search for a city..."
				class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
				@focus="showDropdown = true"
			>
			
			<!-- Hidden input for form submission -->
			<input 
				type="hidden" 
				name="city" 
				x-model="selectedCity"
				required
			>
			
			<!-- Dropdown results -->
			<div
				x-show="showDropdown && searchQuery.length >= 2"
				x-transition
				class="absolute z-50 w-full mt-1 bg-white shadow-lg rounded-lg border border-slate-200 max-h-60 overflow-auto"
				@click.away="showDropdown = false"
			>
				<template x-if="filteredCities.length === 0">
					<div class="px-4 py-2 text-sm text-slate-500">
						No cities found
					</div>
				</template>
				
				<template x-for="city in filteredCities" :key="city.value">
					<button
						type="button"
						class="w-full px-4 py-2 text-left hover:bg-slate-50 focus:bg-slate-50 focus:outline-none"
						@click="selectCity(city)"
						x-text="city.label"
					></button>
				</template>
			</div>
		</div>
	</div>
</section> 
name: Deploy Website

on:
  push:
    branches:
      - main
      
  # Allow manual triggering
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-test-and-package:
    runs-on: ubuntu-24.04-arm
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_URL_TEST: ${{ secrets.DATABASE_URL_TEST }}
      APOD_IMAGE_BUCKET_NAME: ${{ secrets.APOD_IMAGE_BUCKET_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          npm install --no-save @biomejs/cli-linux-arm64

      - name: Build shared package
        run: cd shared && npm run build

      - name: Run unit tests
        run: npm run test:unit

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Upload node_modules artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-modules-artifact-${{ github.run_id }}
          path: node_modules

      - name: Upload shared build artifact
        uses: actions/upload-artifact@v4
        with:
          name: shared-dist-artifact-${{ github.run_id }}
          path: shared/dist

  deploy-lambdas:
    needs: build-test-and-package
    runs-on: ubuntu-24.04-arm
    env:
      ECR_REPOSITORY_URLS: ${{ secrets.ECR_REPOSITORY_URLS }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      APOD_IMAGE_BUCKET_NAME: ${{ secrets.APOD_IMAGE_BUCKET_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # AWS and ECR Setup
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::730335616323:role/GitHubActionsDeploymentRole
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node-modules-artifact-${{ github.run_id }}
          path: . # Download to workspace root, will create node_modules subdir

      # Add permission fixing step
      - name: Fix binary permissions
        run: find node_modules -type f -name "*.node" -o -path "*/node_modules/.bin/*" -o -path "*/node_modules/*bin/*" | xargs chmod +x || true

      - name: Download shared build
        uses: actions/download-artifact@v4
        with:
          name: shared-dist-artifact-${{ github.run_id }}
          path: . # Download to workspace root, will create shared/dist subdir

      # Build and Deploy Lambda Containers
      - name: Build and push Lambda containers
        working-directory: backend/functions
        run: ./build.sh

  deploy-frontend:
    needs: build-test-and-package
    runs-on: ubuntu-24.04-arm
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PUBLIC_SIGNUP_API_URL: ${{ secrets.PUBLIC_SIGNUP_API_URL }}
      PUBLIC_TURNSTILE_SITE_KEY: ${{ secrets.PUBLIC_TURNSTILE_SITE_KEY }}
      STATIC_WEBSITE_BUCKET: ${{ secrets.STATIC_WEBSITE_BUCKET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::730335616323:role/GitHubActionsDeploymentRole
          aws-region: us-east-1

      - name: Download node_modules artifact
        uses: actions/download-artifact@v4
        with:
          name: node-modules-artifact-${{ github.run_id }}
          path: node_modules

      - name: Fix binary permissions
        run: |
          # Fix all bin directories
          find node_modules -type d -name "bin" -o -name ".bin" | xargs chmod -R 755 || true
          
          # Ensure esbuild binary is executable
          if [ -f "node_modules/esbuild/bin/esbuild" ]; then
            chmod 755 node_modules/esbuild/bin/esbuild
          fi

      - name: Download shared build artifact
        uses: actions/download-artifact@v4
        with:
          name: shared-dist-artifact-${{ github.run_id }}
          path: shared/dist
          
      # Frontend Build and Deploy
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
           
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install --no-save --force
         
      - name: Build frontend
        run: cd frontend && npm run build

      - name: Deploy to S3
        run: cd frontend/dist && aws s3 sync --delete ./ s3://${{ secrets.STATIC_WEBSITE_BUCKET }}

name: No Deploy

on:
  # Run on all pull requests
  pull_request:

jobs:
  build-test-and-package:
    runs-on: ubuntu-24.04-arm
    env:
      DATABASE_URL_TEST: ${{ secrets.DATABASE_URL_TEST }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      APOD_IMAGE_BUCKET_NAME: ${{ secrets.APOD_IMAGE_BUCKET_NAME }}
      AWS_REGION: "us-east-1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read Node.js version
        id: node_version
        run: echo "version=$(cat config/.nvmrc | tr -d ' \n')" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.node_version.outputs.version }}
          cache: "npm"
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: |
          npm install

      - name: Build all packages
        run: npm run build

      - name: Run linting
        run: npm run lint

      - name: Run general type checking
        run: npm run check:typescript

      - name: Run frontend Astro check
        run: npm run check:astro

      - name: Read Terraform version
        id: tf_version
        run: echo "version=$(cat config/.terraform-version | tr -d ' \n')" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ steps.tf_version.outputs.version }}

      - name: Run Terraform Validation
        run: npm run check:terraform

      - name: Run unit tests
        run: npm run test:unit
